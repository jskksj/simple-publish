# -*- org-confirm-babel-evaluate: nil; -*-
#+TITLE: How to Publish HTML5 from org-mode Without all of the Default Styles and Javascript
#+HTML_HEAD: "<link rel='stylesheet' type='text/css' href='../css/org-mode.css'>"

** I could not find an example of a static website exported from org-mode.  
It took a while to figure out how to export a self contained project, so this is one example of how to do it.

** A simple template project for static org-mode websites
git clone this project to a new web site name and then add or edit org files as needed.
#+BEGIN_EXAMPLE
  git clone https://github.com/jskksj/simple-publish.git new-repository
#+END_EXAMPLE

- [[file:publish-project.org::*Initialize%20the%20publishing%20properties][Initialze the code needed to publish org-mode file]] Regenerate this emacs lisp script when ever the org-mode project has been changed. After that npm run commands are used to build the project.
- [[file:~/GitHub/simple-publish/package.json::"html-all":%20"emacs%20--batch%20--load%20publish-project.el%20--eval%20'(org-publish%20\"simple-publish\"%20t)'"][npm run html-all]] will force a build of all org files into HTML5.
  
** What's in the folders
#+NAME: folder-description
#+BEGIN_SRC shell :exports results :results list code
  ls -F .. | awk {'print $1'}
#+END_SRC

#+RESULTS: folder-description
#+BEGIN_SRC shell
- LICENSE
- node_modules/
- org/
- package.json
- package-lock.json
- README.org@
#+END_SRC


The *org* folder contains all of the source code that is used to build the HTML5 files.  org-mode export maintains the folder structure that it is given.  The files *index.html*, *README.html*, and *publish-project.html* will end up at the root of the output folders, even thoughas they start above the root of the repository folder. *publish-project.el* is a emacs lisp program tangled out of *org/publish-project.org*, it is run by npm to export out all of the html files.

Once all of the project files have been processed, a new folder called *published* will contain all of the websites raw html, css, and assets.

** What's in the files
*org/index.org* is where the project starts. *org/css/org-mode.css* pulls out the [[file:css/org-mode.css][CSS]] styles that org-mode normally includes inline. *org/empty.org* is a simple template file.
