# -*- org-confirm-babel-evaluate: nil; -*-
#+TITLE: How to Use Org-Mode to Publish a Website in HTML5
#+SETUPFILE: publish-setup.org

** I could not find a working example of a static website exported from org-mode.
It took a while to figure out how to export a self contained project, so this is one example of how to do it.

*** Perequisites
The software versions I am running. I am using spacemacs but the code is built with emacs in batch mode. You should be able to run older versions of the software but I have not tried it.

  *(emacs-version)*
#+NAME: (emacs-version)
#+BEGIN_SRC emacs-lisp :exports both :eval never-export
  (emacs-version)
#+END_SRC

#+RESULTS:
#+BEGIN_SRC emacs-lisp
- "GNU Emacs 25.3.50.2 (x86_64-pc-linux-gnu, GTK+ Version 3.18.9)\n of 2017-09-15"
#+END_SRC

#+BEGIN_SRC shell
bash version
#+END_SRC

** A simple template project for static org-mode websites
git clone this project to a new web site name and then add or edit org files as needed.
#+BEGIN_EXAMPLE
  git clone https://github.com/jskksj/simple-publish.git new-repository
#+END_EXAMPLE

- [[file:org/publish-project.org::*Initialize%20the%20publishing%20properties][Initialze the code needed to publish org-mode file]] Regenerate this emacs lisp script when ever the org-mode project has been changed. After that npm run commands are used to build the project.
- [[file:package.json::"html-all":%20"emacs%20--batch%20--load%20publish-project.el%20--eval%20'(org-publish%20\"simple-publish\"%20t)'"][npm run html-all]] will force a build of all org files into HTML5.

** What's in the folders
   :PROPERTIES:
   :ORDERED:  t
   :END:
#+NAME: folder-description
#+BEGIN_SRC emacs-lisp :exports both :eval never-export
  tree
#+END_SRC

#+RESULTS: folder-description
#+BEGIN_SRC shell
- .
- ├── css
- │   ├── publish-org-html-style-default.css
- │   ├── publish-org-html-style-default.org
- │   └── publish-setup.org
- ├── html
- │   ├── empty.org
- │   └── publish-setup.org
- ├── index.org
- ├── publish-project.org
- ├── publish-setup.org
- └── README.org
- 2 directories, 9 files
#+END_SRC



The *org* folder contains all of the source code that is used to build the HTML5 files.  org-mode export maintains the folder structure that it is given.  The files *index.html*, *README.html*, and *publish-project.html* will end up at the root of the output folders, even thoughas they start above the root of the repository folder. *publish-project.el* is a emacs lisp program tangled out of *org/publish-project.org*, it is run by npm to export out all of the html files.

Once all of the project files have been processed, a new folder called *published* will contain all of the websites raw html, css, and assets.

** What's in the files
*org/index.org* is where the project starts. *org/css/org-mode.css* pulls out the [[file:org/css/org-mode.css::.title%20{][CSS]] styles that org-mode normally includes inline. *org/empty.org* is a simple template file.

* Purpose Statement
** Type of document
README
** What does the audience need to know
What this project does and how to use it.
** Who is the audience
DEVELOPERS who are USERS of EMACS ORG-MODE.
** What does the audience do with it
They will use the project as an example of a literate web site.
