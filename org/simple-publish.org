# -*- org-confirm-babel-evaluate: nil; -*-

** First Thoughts on Configuring Spacemacs org-mode as a web site generator
The default html export adds a lot of cruft to the output html files.
** How to run this as a build script
How about tangling it out as an elisp script and then run it from the command line with emacs?


* Raw code to tangle out
** First let's set up the css and javascript imports
 #+BEGIN_SRC emacs-lisp :results silent
   (setq cssjs "<link rel='stylesheet' type='text/css' href='../css/css/htmlize.css'>

                <script type='text/javascript' src='../../jsLibraries/jquery.min.js'></script>
                <script type='text/javascript' src='../../jsLibraries/bootstrap.bundle.min.js'></script>
                <script type='text/javascript' src='../css/js/readtheorg.js'></script>")
 #+END_SRC

 #+BEGIN_SRC emacs-lisp :results silent
   (setq cssjs "<link>") 
 #+END_SRC

** Reset a lot of the default html output
 #+BEGIN_SRC emacs-lisp :results silent
   (setq org-html-head-include-scripts nil 
         org-html-html5-fancy t 
         org-html-doctype "html5"
         org-html-head-include-default-style nil)
         
 #+END_SRC

** Initialize the publishing properties
 #+BEGIN_SRC emacs-lisp :results silent 
     (setq org-publish-project-alist
           '(("simple-publish"
              :base-directory "."
              :base-extension "org"
              :publishing-directory "../publish-html"
              :publishing-function org-html-publish-to-html
              :section-numbers nil
              :with-toc nil
              ;;:html-head ,cssjs
              :html-extension "html"
              ;;:html-postamble "<div id="postamble" class="status">"
)))

(org-publish-current-project)
 #+END_SRC
