#+TITLE: Generating Documentation

* Generate HTML Documentation
  
All the Org files that generate the =org-mode-clj-tests-utils= project can be exported as HTML documentation pages by running the following two code blocks.

But first let's take a look at how the Org-mode project that generate this documentation got configured:

  - Settings
    - =:base-directory=
      - The base directory is the current directory which is the =[project]/org/= directory where all the Org files are defined
    - =:recursive=
      - We specify that we want Org-mode to generate HTML files for each Org file in all children folder (recursively)
    - =:publishing-directory=
      - We specify where we want to publish the HTML documentation from the Org files
    - =:publishing-function=
      - We specify that we want to publish everything in HTML
    - =:section-numbers=
      - We don't want any kind of section numbers generated by Org-mode
    - =:with-toc=
      - We want to include a table of content for each generated documentation file
    - =:auto-sitemap=
      - We want to generate a sitemap automatically. The file is named =sitemap.html=
    - =:html-head=
      - We want to specify a style sheet that will be used by each generated HTML file. It should be located in =doc/html/css/=

** Themes

Different themes and styles can be defined for the generated HTML pages. To enable a theme, you simply have to select the proper =:html-head= setting.

The main themes comes form the [[https://github.com/fniessen/org-html-themes][org-html-themes]] extension.

** Publishing Options

Additional settings and configurations are available from these two web pages:

 - [[http://orgmode.org/manual/Publishing.html#Publishing][Org-mode Publishing]]
 - [[http://orgmode.org/worg/org-8.0.html#sec-5][Org-mode 8 & 9 Updates]]

** Publish

To publish in HTML, you simply have to run the following code blocks:

#+BEGIN_SRC emacs-lisp :results silent

  (setq org-publish-project-alist
        '(("org-mode-publish"
     :base-directory "."
     :publishing-directory "../publish-html"
     :publishing-function org-html-publish-to-html
     :section-numbers nil
           :recursive t
     :exclude "fulldoc\\.org\\|project\\.org\\|tangle\\-all\\.org\\|setup\\.org\\|publish\\.org"
     :with-toc t
     :auto-sitemap nil

     ; ReadTheOrg Theme
     :html-head "<link rel=\"stylesheet\" type=\"text/css\" href=\"../css/readtheorg/css/htmlize.css\"/>
                 <link rel=\"stylesheet\" type=\"text/css\" href=\"../css/readtheorg/css/readtheorg.css\"/>
                 <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js\"></script>
                 <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js\"></script>
                 <script type=\"text/javascript\" src=\"../css/lib/js/jquery.stickytableheaders.js\"></script>
                 <script type=\"text/javascript\" src=\"../css/readtheorg/js/readtheorg.js\"></script>")))
#+END_SRC

#+BEGIN_SRC emacs-lisp :results silent
(setq org-publish-use-timestamps-flag nil)
#+END_SRC

#+BEGIN_SRC emacs-lisp :results silent
(setq org-export-html-style-include-scripts nil
      org-export-html-style-include-default nil)

(org-publish-all)
#+END_SRC
