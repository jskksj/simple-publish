# -*- org-confirm-babel-evaluate: nil; -*-
#+TITLE: How to Publish HTML5 Without all of the Default Styles and Javascript
#+HTML_HEAD: "<link rel='stylesheet' type='text/css' href='../css/org-mode.css'>"

** A simple template project for org-mode websites
git clone this project to a new web site name and then add or edit org files as needed.
#+BEGIN_EXAMPLE
  git clone https://github.com/jskksj/simple-publish.git new-repository
#+END_EXAMPLE

- [[file:publish-project.org::*Initialze%20the%20code%20needed%20to%20publish%20org-mode%20files][Initialze the code needed to publish org-mode files]] 
- [[file:package.json::"html":%20"emacs%20--eval%20'(setq%20force-all%20nil)'%20--batch%20-l%20./publish-project.el",][npm run html-all]] will force a build of all org files into HTML5.
  
** What's in the folders
#+NAME: folder-description
#+BEGIN_SRC shell :exports results :results list code
   ls -lF | awk {'print $9'}
#+END_SRC

#+RESULTS: folder-description
#+BEGIN_SRC shell
- LICENSE
- org/
- package.json
- package-lock.json
- publish-project.el
- publish-project.org
- README.org
- tangle-all.org
#+END_SRC

#+RESULTS:

The *org* folder contains all of the source code that is used to build the HTML5 files.  org-mode maintains the folder structure that is given.  So index.html, README.html, and publish-project.html will end up at the root of the output folders, just as they start at the root of the repository folder.

** What's in the files
*org/index.org* is where the project starts. *org/css/org-mode.css* pulls out the [[file:css/org-mode.css::/*%20These%20CSS%20styles%20have%20been%20pulled%20from%20(org-html-style-default)%20in%20ox-html.el%20*/][CSS]] styles that org-mode normally includes inline. *org/empty.org* is a simple template file.
